'use client';

import { useCartStore } from '@/store/cartStore';
import { X, Plus, Minus, ShoppingCart, Gift, Package, Cake } from "lucide-react";
import Link from 'next/link';
import { useIsMounted } from '@/hooks/useIsMounted';

const Cart = () => {
  const { 
    items, 
    isOpen, 
    toggleCart, 
    updateQuantity, 
    removeItem, 
    getTotalPrice, 
    getTotalItems 
  } = useCartStore();
  const isMounted = useIsMounted();

  const formatPrice = (price: number) => {
    return new Intl.NumberFormat('ru-RU').format(price);
  };

  const getReminders = () => {
    const reminders = [];
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ—Ä—Ç—ã –±–µ–∑ —Å–≤–µ—á–µ–π
    const cakesWithoutCandles = items.filter(item => 
      item.type === 'custom' && 
      (!item.configuration?.candles || item.configuration.candles === 0)
    );
    
    if (cakesWithoutCandles.length > 0) {
      reminders.push({
        icon: <Cake className="w-4 h-4" />,
        text: '–î–æ–±–∞–≤—å—Ç–µ —Å–≤–µ—á–∏ –∫ —Ç–æ—Ä—Ç–∞–º –¥–ª—è –ø—Ä–∞–∑–¥–Ω–∏–∫–∞!',
        color: 'text-yellow-600',
        bgColor: 'bg-yellow-50'
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ—Ä—Ç—ã –±–µ–∑ —É–ø–∞–∫–æ–≤–∫–∏
    const cakesWithoutPackaging = items.filter(item => 
      item.type === 'custom' && 
      (!item.configuration?.packaging || item.configuration.packaging === 'standard')
    );
    
    if (cakesWithoutPackaging.length > 0) {
      reminders.push({
        icon: <Package className="w-4 h-4" />,
        text: '–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∞—Å–∏–≤—É—é —É–ø–∞–∫–æ–≤–∫—É –¥–ª—è –≤–∞—à–∏—Ö —Ç–æ—Ä—Ç–æ–≤!',
        color: 'text-blue-600',
        bgColor: 'bg-blue-50'
      });
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Ç–æ—Ä—Ç—ã –±–µ–∑ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
    const cakesWithoutText = items.filter(item => 
      item.type === 'custom' && 
      (!item.configuration?.customText || item.configuration.customText.trim() === '')
    );
    
    if (cakesWithoutText.length > 0) {
      reminders.push({
        icon: <Gift className="w-4 h-4" />,
        text: '–î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É—é –Ω–∞–¥–ø–∏—Å—å –Ω–∞ —Ç–æ—Ä—Ç!',
        color: 'text-pink-600',
        bgColor: 'bg-pink-50'
      });
    }

    return reminders;
  };

  if (!isMounted || !isOpen) return null;

  const reminders = getReminders();

  return (
    <div className="fixed inset-0 z-50 overflow-hidden">
      {/* Overlay */}
      <div 
        className="absolute inset-0 bg-black bg-opacity-50"
        onClick={toggleCart}
      />
      
      {/* Cart Panel */}
      <div className="absolute right-0 top-0 h-full w-full max-w-md bg-white shadow-xl">
        <div className="flex h-full flex-col">
          {/* Header */}
          <div className="flex items-center justify-between border-b border-gray-200 px-6 py-4">
            <h2 className="text-lg font-semibold text-gray-900">
              –ö–æ—Ä–∑–∏–Ω–∞ ({getTotalItems()})
            </h2>
            <button
              onClick={toggleCart}
              className="p-2 text-gray-400 hover:text-gray-600 transition-colors"
            >
              <X className="w-5 h-5" />
            </button>
          </div>

          {/* Content */}
          <div className="flex-1 overflow-y-auto px-6 py-4">
            {items.length === 0 ? (
              <div className="flex flex-col items-center justify-center h-full text-center">
                <ShoppingCart className="w-16 h-16 text-gray-300 mb-4" />
                <h3 className="text-lg font-medium text-gray-900 mb-2">
                  –ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞
                </h3>
                <p className="text-gray-500 mb-6">
                  –î–æ–±–∞–≤—å—Ç–µ —Ç–æ—Ä—Ç—ã –∏–∑ –∫–∞—Ç–∞–ª–æ–≥–∞ –∏–ª–∏ —Å–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –≤ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–µ
                </p>
                <Link
                  href="/catalog"
                  onClick={toggleCart}
                  className="bg-pink-500 text-white px-6 py-3 rounded-full hover:bg-pink-600 transition-colors"
                >
                  –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞—Ç–∞–ª–æ–≥
                </Link>
              </div>
            ) : (
              <div className="space-y-4">
                {/* Items */}
                {items.map((item) => (
                  <div key={item.id} className="border border-gray-200 rounded-lg p-4">
                    <div className="flex items-start justify-between mb-2">
                      <div className="flex-1">
                        <h3 className="font-medium text-gray-900">{item.name}</h3>
                        <p className="text-sm text-gray-500">
                          {item.type === 'custom' ? '–ö–∞—Å—Ç–æ–º–Ω—ã–π —Ç–æ—Ä—Ç' : '–ì–æ—Ç–æ–≤—ã–π —Ç–æ—Ä—Ç'}
                        </p>
                        {item.configuration && (
                          <div className="mt-2 text-xs text-gray-600">
                            {item.configuration.size && (
                              <p>–†–∞–∑–º–µ—Ä: {item.configuration.size}</p>
                            )}
                            {item.configuration.layers.length > 0 && (
                              <p>–°–ª–æ–∏: {item.configuration.layers.length}</p>
                            )}
                            {item.configuration.candles > 0 && (
                              <p>–°–≤–µ—á–∏: {item.configuration.candles}</p>
                            )}
                          </div>
                        )}
                      </div>
                      <button
                        onClick={() => removeItem(item.id)}
                        className="p-1 text-gray-400 hover:text-red-500 transition-colors"
                      >
                        <X className="w-4 h-4" />
                      </button>
                    </div>
                    
                    <div className="flex items-center justify-between">
                      <div className="flex items-center space-x-2">
                        <button
                          onClick={() => updateQuantity(item.id, item.quantity - 1)}
                          className="p-1 rounded-full bg-gray-100 hover:bg-gray-200 transition-colors"
                        >
                          <Minus className="w-4 h-4" />
                        </button>
                        <span className="w-8 text-center">{item.quantity}</span>
                        <button
                          onClick={() => updateQuantity(item.id, item.quantity + 1)}
                          className="p-1 rounded-full bg-gray-100 hover:bg-gray-200 transition-colors"
                        >
                          <Plus className="w-4 h-4" />
                        </button>
                      </div>
                      <div className="text-lg font-semibold text-pink-600">
                        {formatPrice(item.price * item.quantity)}‚ÇΩ
                      </div>
                    </div>
                  </div>
                ))}

                {/* Reminders */}
                {reminders.length > 0 && (
                  <div className="space-y-3">
                    <h4 className="font-medium text-gray-900">–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:</h4>
                    {reminders.map((reminder, index) => (
                      <div
                        key={index}
                        className={`flex items-center space-x-3 p-3 rounded-lg ${reminder.bgColor}`}
                      >
                        <div className={reminder.color}>
                          {reminder.icon}
                        </div>
                        <p className={`text-sm ${reminder.color}`}>
                          {reminder.text}
                        </p>
                      </div>
                    ))}
                  </div>
                )}
              </div>
            )}
          </div>

          {/* Footer */}
          {items.length > 0 && (
            <div className="border-t border-gray-200 px-6 py-4">
              <div className="flex items-center justify-between mb-4">
                <span className="text-lg font-semibold text-gray-900">
                  –ò—Ç–æ–≥–æ:
                </span>
                <span className="text-2xl font-bold text-pink-600">
                  {formatPrice(getTotalPrice())}‚ÇΩ
                </span>
              </div>
              
              <div className="space-y-3">
                <button
                  onClick={() => {
                    const totalPrice = items.reduce((sum, item) => sum + (item.price * item.quantity), 0);
                    const orderText = `üç∞ –ó–∞–∫–∞–∑ —Ç–æ—Ä—Ç–æ–≤ Daisy Cake

üìã –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:
${items.map(item => `‚Ä¢ ${item.name} - ${item.quantity} —à—Ç. √ó ${item.price}‚ÇΩ = ${item.price * item.quantity}‚ÇΩ`).join('\n')}

üí∞ –û–±—â–∞—è —Å—É–º–º–∞: ${totalPrice}‚ÇΩ

üìû –¢–µ–ª–µ—Ñ–æ–Ω: [—É–∫–∞–∂–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä]
üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: [—É–∫–∞–∂–∏—Ç–µ –∞–¥—Ä–µ—Å]
üìÖ –ñ–µ–ª–∞–µ–º–∞—è –¥–∞—Ç–∞: [—É–∫–∞–∂–∏—Ç–µ –¥–∞—Ç—É]
üïê –ñ–µ–ª–∞–µ–º–æ–µ –≤—Ä–µ–º—è: [—É–∫–∞–∂–∏—Ç–µ –≤—Ä–µ–º—è]

–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! üéÇ`;

                    const telegramUrl = `https://t.me/daisy_cake_sochi?text=${encodeURIComponent(orderText)}`;
                    
                    // –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è - –≤ —Ç–æ–º –∂–µ –æ–∫–Ω–µ
                    const newWindow = window.open(telegramUrl, '_blank');
                    if (!newWindow) {
                      // –ï—Å–ª–∏ popup –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ —Ç–æ–º –∂–µ –æ–∫–Ω–µ
                      window.location.href = telegramUrl;
                    }
                    toggleCart();
                  }}
                  className="w-full bg-pink-500 text-white py-3 px-4 rounded-full hover:bg-pink-600 transition-colors text-center block font-medium"
                >
                  –û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑
                </button>
                <Link
                  href="/builder"
                  onClick={toggleCart}
                  className="w-full border border-pink-500 text-pink-500 py-3 px-4 rounded-full hover:bg-pink-50 transition-colors text-center block font-medium"
                >
                  –°–æ–∑–¥–∞—Ç—å –µ—â–µ —Ç–æ—Ä—Ç
                </Link>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default Cart;

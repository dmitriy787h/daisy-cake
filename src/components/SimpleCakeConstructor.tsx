'use client';

import { useState } from 'react';

const SimpleCakeConstructor = () => {
  const [selectedSize, setSelectedSize] = useState('small');
  const [selectedShape, setSelectedShape] = useState('round');
  const [selectedLayer, setSelectedLayer] = useState<string>('');
  const [selectedFilling, setSelectedFilling] = useState<string>('');
  const [decorationComment, setDecorationComment] = useState('');
  const [candles, setCandles] = useState(0);
  const [customText, setCustomText] = useState('');
  const [customerName, setCustomerName] = useState('');
  const [customerPhone, setCustomerPhone] = useState('');

  const shapes = [
    { id: 'round', name: '–ö—Ä—É–≥–ª—ã–π', price: 0, icon: '‚≠ï' },
    { id: 'heart', name: '–í —Ñ–æ—Ä–º–µ —Å–µ—Ä–¥—Ü–∞', price: 100, icon: '‚ù§Ô∏è' }
  ];

  const sizes = [
    { id: 'bento', name: '–ë–µ–Ω—Ç–æ', price: 800, diameter: 11 },
    { id: 'small', name: '–¢–æ—Ä—Ç—ã –æ—Ç 1–∫–≥', price: 1500, diameter: 18 },
    { id: 'large', name: '–ë–æ–ª—å—à–∏–µ —Ç–æ—Ä—Ç—ã –±–æ–ª—å—à–µ 1–∫–≥', price: 2800, diameter: 24 }
  ];

  const layers = [
    { id: 'vanilla', name: '–í–∞–Ω–∏–ª—å–Ω—ã–π –±–∏—Å–∫–≤–∏—Ç' },
    { id: 'chocolate', name: '–®–æ–∫–æ–ª–∞–¥–Ω—ã–π –±–∏—Å–∫–≤–∏—Ç' },
    { id: 'red-velvet', name: '–ö—Ä–∞—Å–Ω—ã–π –±–∞—Ä—Ö–∞—Ç' },
    { id: 'honey', name: '–ú–µ–¥–æ–≤—ã–π' }
  ];

  const fillings = [
    { id: 'strawberry', name: '–ö–ª—É–±–Ω–∏—á–Ω–∞—è', price: 0 },
    { id: 'cherry', name: '–í–∏—à–Ω–µ–≤–∞—è', price: 0 },
    { id: 'caramel', name: '–ö–∞—Ä–∞–º–µ–ª—å', price: 0 },
    { id: 'caramel-peanut', name: '–ö–∞—Ä–∞–º–µ–ª—å –∏ –∞—Ä–∞—Ö–∏—Å', price: 0 },
    { id: 'caramel-banana', name: '–ö–∞—Ä–∞–º–µ–ª—å –∏ –±–∞–Ω–∞–Ω', price: 0 },
    { id: 'coconut', name: '–ö–æ–∫–æ—Å–æ–≤–æ–µ', price: 0 }
  ];



  const calculatePrice = () => {
    const sizePrice = sizes.find(s => s.id === selectedSize)?.price || 0;
    const shapePrice = shapes.find(s => s.id === selectedShape)?.price || 0;
    // –ë–∏—Å–∫–≤–∏—Ç –≤–∫–ª—é—á–µ–Ω –≤ –±–∞–∑–æ–≤—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å
    const layerPrice = 0;
    const fillingPrice = selectedFilling ? (fillings.find(f => f.id === selectedFilling)?.price || 0) : 0;
    // –î–µ–∫–æ—Ä —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º
    const decorationPrice = 0;
    const candlesPrice = candles * 50;
    const textPrice = customText ? 50 : 0;

    return sizePrice + shapePrice + layerPrice + fillingPrice + decorationPrice + candlesPrice + textPrice;
  };


  const totalPrice = calculatePrice();

  return (
    <div className="max-w-6xl mx-auto px-4 py-8">
      <div className="text-center mb-8">
        <h1 className="text-3xl font-bold text-gray-900 mb-4">–ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä —Ç–æ—Ä—Ç–æ–≤</h1>
        <p className="text-lg text-gray-600">–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Ç–æ—Ä—Ç</p>
      </div>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-8">
        {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="space-y-8">
          {/* –§–æ—Ä–º–∞ –∏ —Ä–∞–∑–º–µ—Ä */}
          <div className="bg-white p-6 rounded-lg shadow">
            <h2 className="text-xl font-semibold mb-4">–§–æ—Ä–º–∞ –∏ —Ä–∞–∑–º–µ—Ä —Ç–æ—Ä—Ç–∞</h2>
            
            {/* –§–æ—Ä–º–∞ —Ç–æ—Ä—Ç–∞ */}
            <div className="mb-6">
              <h3 className="text-lg font-medium mb-3">–§–æ—Ä–º–∞</h3>
              <div className="grid grid-cols-2 gap-4">
                {shapes.map((shape) => (
                  <button
                    key={shape.id}
                    onClick={() => setSelectedShape(shape.id)}
                    className={`p-4 rounded-lg border-2 text-center transition-all ${
                      selectedShape === shape.id
                        ? 'border-pink-500 bg-pink-50'
                        : 'border-gray-200 hover:border-pink-300'
                    }`}
                  >
                    <div className="text-2xl mb-2">{shape.icon}</div>
                    <div className="font-semibold">{shape.name}</div>
                    <div className="text-pink-600">{shape.price > 0 ? `+${shape.price}‚ÇΩ` : '–í–∫–ª—é—á–µ–Ω–æ'}</div>
                  </button>
                ))}
              </div>
            </div>

            {/* –†–∞–∑–º–µ—Ä —Ç–æ—Ä—Ç–∞ */}
            <div>
              <h3 className="text-lg font-medium mb-3">–†–∞–∑–º–µ—Ä</h3>
              <div className="grid grid-cols-3 gap-4">
                {sizes.map((size) => (
                  <button
                    key={size.id}
                    onClick={() => setSelectedSize(size.id)}
                    className={`p-4 rounded-lg border-2 text-center transition-all ${
                      selectedSize === size.id
                        ? 'border-pink-500 bg-pink-50'
                        : 'border-gray-200 hover:border-pink-300'
                    }`}
                  >
                    <div className="font-semibold">{size.name}</div>
                    <div className="text-pink-600">{size.price}‚ÇΩ</div>
                  </button>
                ))}
              </div>
            </div>
          </div>

          {/* –ë–∏—Å–∫–≤–∏—Ç */}
          <div className="bg-white p-6 rounded-lg shadow">
            <h2 className="text-xl font-semibold mb-4">–ë–∏—Å–∫–≤–∏—Ç</h2>
            <div className="space-y-3">
              {layers.map((layer) => (
                <div 
                  key={layer.id} 
                  className="flex items-center justify-between p-3 border rounded-lg cursor-pointer hover:bg-gray-50"
                  onClick={() => setSelectedLayer(layer.id)}
                >
                  <div>
                    <div className="font-medium">{layer.name}</div>
                    <div className="text-sm text-gray-600">
                      –í–∫–ª—é—á–µ–Ω–æ –≤ —Å—Ç–æ–∏–º–æ—Å—Ç—å
                    </div>
                  </div>
                  <div className={`w-4 h-4 rounded-full border-2 ${
                    selectedLayer === layer.id
                      ? 'bg-pink-500 border-pink-500'
                      : 'border-gray-300'
                  }`}>
                    {selectedLayer === layer.id && (
                      <div className="w-full h-full rounded-full bg-white scale-50"></div>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>

          {/* –ù–∞—á–∏–Ω–∫–∏ */}
          <div className="bg-white p-6 rounded-lg shadow">
            <h2 className="text-xl font-semibold mb-4">–ù–∞—á–∏–Ω–∫–∏</h2>
            <div className="space-y-3">
              {fillings.map((filling) => (
                <div key={filling.id} className="flex items-center justify-between p-3 border rounded-lg">
                  <div>
                    <div className="font-medium">{filling.name}</div>
                    <div className="text-sm text-gray-600">–í–∫–ª—é—á–µ–Ω–æ</div>
                  </div>
                  <button
                    onClick={() => setSelectedFilling(selectedFilling === filling.id ? '' : filling.id)}
                    className={`px-4 py-2 rounded ${
                      selectedFilling === filling.id
                        ? 'bg-pink-500 text-white'
                        : 'bg-gray-200 text-gray-700 hover:bg-gray-300'
                    }`}
                  >
                    {selectedFilling === filling.id ? '–í—ã–±—Ä–∞–Ω–æ' : '–í—ã–±—Ä–∞—Ç—å'}
                  </button>
                </div>
              ))}
            </div>
          </div>

          {/* –î–µ–∫–æ—Ä */}
          <div className="bg-white p-6 rounded-lg shadow">
            <h2 className="text-xl font-semibold mb-4">–î–µ–∫–æ—Ä</h2>
            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –û–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –¥–µ–∫–æ—Ä
              </label>
              <textarea
                value={decorationComment}
                onChange={(e) => setDecorationComment(e.target.value)}
                placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: —Å–≤–µ–∂–∏–µ —è–≥–æ–¥—ã, —à–æ–∫–æ–ª–∞–¥–Ω–∞—è –∫—Ä–æ—à–∫–∞, —Å–∞—Ö–∞—Ä–Ω—ã–µ —Ü–≤–µ—Ç—ã, –º–∞–∫–∞—Ä—É–Ω—ã..."
                className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent resize-none"
                rows={4}
                maxLength={200}
              />
              <div className="text-xs text-gray-500 mt-1">
                {decorationComment.length}/200 —Å–∏–º–≤–æ–ª–æ–≤
              </div>
              <div className="text-sm text-gray-600 mt-2">
                üí° –ú–µ–Ω–µ–¥–∂–µ—Ä —Ä–∞—Å—Å—á–∏—Ç–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–µ–∫–æ—Ä–∞ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω–æ
              </div>
            </div>
          </div>


          {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ */}
          <div className="bg-white p-6 rounded-lg shadow">
            <h2 className="text-xl font-semibold mb-4">–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</h2>
            
            <div className="mb-4">
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–≤–µ—á–µ–π
              </label>
              <div className="flex items-center space-x-4">
                <button
                  onClick={() => setCandles(Math.max(0, candles - 1))}
                  className="px-3 py-1 border rounded hover:bg-gray-50"
                >
                  -
                </button>
                <span className="text-lg font-semibold w-8 text-center">{candles}</span>
                <button
                  onClick={() => setCandles(candles + 1)}
                  className="px-3 py-1 border rounded hover:bg-gray-50"
                >
                  +
                </button>
                <span className="text-sm text-gray-600">√ó 50‚ÇΩ = {candles * 50}‚ÇΩ</span>
              </div>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-2">
                –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç
              </label>
              <input
                type="text"
                value={customText}
                onChange={(e) => setCustomText(e.target.value)}
                placeholder="–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ç–æ—Ä—Ç–∞..."
                className="w-full p-3 border rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent"
                maxLength={50}
              />
              <div className="text-xs text-gray-500 mt-1">
                {customText.length}/50 —Å–∏–º–≤–æ–ª–æ–≤ {customText && '+50‚ÇΩ'}
              </div>
            </div>
          </div>
        </div>

        {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –ø—Ä–µ–≤—å—é –∏ –∑–∞–∫–∞–∑ */}
        <div className="space-y-6">
          {/* –ü—Ä–µ–≤—å—é */}
          <div className="bg-white p-6 rounded-lg shadow">
            <h2 className="text-xl font-semibold mb-4 text-center">–í–∞—à —Ç–æ—Ä—Ç</h2>
            <div className="flex justify-center mb-4">
              <div className="w-32 h-32 bg-gradient-to-br from-pink-200 to-purple-300 rounded-full flex items-center justify-center text-4xl">
                üéÇ
              </div>
            </div>
            
            <div className="space-y-2 text-sm">
              <div className="flex justify-between">
                <span>–§–æ—Ä–º–∞:</span>
                <span className="font-semibold">{shapes.find(s => s.id === selectedShape)?.name}</span>
              </div>
              <div className="flex justify-between">
                <span>–†–∞–∑–º–µ—Ä:</span>
                <span className="font-semibold">{sizes.find(s => s.id === selectedSize)?.name}</span>
              </div>
              <div className="flex justify-between">
                <span>–ë–∏—Å–∫–≤–∏—Ç:</span>
                <span className="font-semibold">{selectedLayer ? 1 : 0}</span>
              </div>
              <div className="flex justify-between">
                <span>–ù–∞—á–∏–Ω–∫–∏:</span>
                <span className="font-semibold">{selectedFilling ? fillings.find(f => f.id === selectedFilling)?.name || '–í—ã–±—Ä–∞–Ω–æ' : '–ù–µ –≤—ã–±—Ä–∞–Ω–æ'}</span>
              </div>
              <div className="flex justify-between">
                <span>–î–µ–∫–æ—Ä:</span>
                <span className="font-semibold">{decorationComment ? '–£–∫–∞–∑–∞–Ω' : '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
              </div>
              {candles > 0 && (
                <div className="flex justify-between">
                  <span>–°–≤–µ—á–∏:</span>
                  <span className="font-semibold">{candles} —à—Ç.</span>
                </div>
              )}
              {customText && (
                <div className="flex justify-between">
                  <span>–¢–µ–∫—Å—Ç:</span>
                  <span className="font-semibold">&ldquo;{customText}&rdquo;</span>
                </div>
              )}
            </div>
          </div>

          {/* –¶–µ–Ω–∞ */}
          <div className="bg-white p-6 rounded-lg shadow">
            <h2 className="text-xl font-semibold mb-4">–ò—Ç–æ–≥–æ</h2>
            <div className="text-center">
              <div className="text-3xl font-bold text-pink-600">{totalPrice}‚ÇΩ</div>
            </div>
          </div>

          {/* –§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞ */}
          <div className="bg-white p-6 rounded-lg shadow">
            <h2 className="text-xl font-semibold mb-4">–û—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑</h2>
            <form onSubmit={(e) => {
              e.preventDefault();
              
              const orderText = `üç∞ –ó–∞–∫–∞–∑ –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —Ç–æ—Ä—Ç–∞ Daisy Cake

üë§ –ö–ª–∏–µ–Ω—Ç: ${customerName || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}
üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${customerPhone || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}

üéÇ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ç–æ—Ä—Ç–∞:
‚Ä¢ –†–∞–∑–º–µ—Ä: ${sizes.find(s => s.id === selectedSize)?.name || selectedSize}
‚Ä¢ –§–æ—Ä–º–∞: ${shapes.find(s => s.id === selectedShape)?.name || selectedShape}
‚Ä¢ –ë–∏—Å–∫–≤–∏—Ç: ${selectedLayer ? layers.find(l => l.id === selectedLayer)?.name || '–ù–µ –≤—ã–±—Ä–∞–Ω' : '–ù–µ –≤—ã–±—Ä–∞–Ω'}
‚Ä¢ –ù–∞—á–∏–Ω–∫–∏: ${selectedFilling ? fillings.find(f => f.id === selectedFilling)?.name || '–ù–µ –≤—ã–±—Ä–∞–Ω–∞' : '–ù–µ –≤—ã–±—Ä–∞–Ω–∞'}
‚Ä¢ –î–µ–∫–æ—Ä: ${decorationComment || '–ù–µ —É–∫–∞–∑–∞–Ω'}
‚Ä¢ –°–≤–µ—á–∏: ${candles} —à—Ç.
${customText ? `‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–∞—è –Ω–∞–¥–ø–∏—Å—å: "${customText}"` : ''}

üí∞ –û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å: ${totalPrice}‚ÇΩ

üì∏ –ù–∞—à –∏–Ω—Å—Ç–∞–≥—Ä–∞–º: https://www.instagram.com/daisy.cake.sochi?igsh=dWYzMXZkNDBtMnJ3

–°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–∫–∞–∑! üéÇ`;

              const telegramUrl = `https://t.me/daisy_cake_sochi?text=${encodeURIComponent(orderText)}`;
              
              // –ü–æ–ø—Ä–æ–±—É–µ–º –æ—Ç–∫—Ä—ã—Ç—å –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ, –µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏—Ç—Å—è - –≤ —Ç–æ–º –∂–µ –æ–∫–Ω–µ
              const newWindow = window.open(telegramUrl, '_blank');
              if (!newWindow) {
                // –ï—Å–ª–∏ popup –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤ —Ç–æ–º –∂–µ –æ–∫–Ω–µ
                window.location.href = telegramUrl;
              }
            }} className="space-y-4">

              <div className="space-y-4 mb-6">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –í–∞—à–µ –∏–º—è *
                  </label>
                  <input
                    type="text"
                    value={customerName}
                    onChange={(e) => setCustomerName(e.target.value)}
                    className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è"
                    required
                  />
                </div>
                
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    –¢–µ–ª–µ—Ñ–æ–Ω *
                  </label>
                  <input
                    type="tel"
                    value={customerPhone}
                    onChange={(e) => setCustomerPhone(e.target.value)}
                    className="w-full p-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-pink-500 focus:border-transparent"
                    placeholder="+7 (938) 405-25-90"
                    required
                  />
                </div>
              </div>

              <button
                type="submit"
                className="w-full bg-gradient-to-r from-pink-500 to-purple-600 text-white font-semibold py-3 px-6 rounded-lg hover:from-pink-600 hover:to-purple-700 transition-all duration-300"
              >
                –ó–∞–∫–∞–∑–∞—Ç—å –∑–∞ {totalPrice}‚ÇΩ
              </button>
            </form>
          </div>
        </div>
      </div>
    </div>
  );
};

export default SimpleCakeConstructor;

